Conectar no container:
docker exec -it oracle-free sqlplus system/Admin123@//localhost:1521/FREEPDB1

Ver logs do container:
docker logs -f oracle-free

-- Criar o usuário (schema)
CREATE USER SAU IDENTIFIED BY sau123
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

--ALTER USER SAU QUOTA UNLIMITED ON USERS;

-- Dar permissões básicas
GRANT CONNECT, RESOURCE TO SAU;
GRANT CREATE SESSION TO SAU;
GRANT CREATE TABLE TO SAU;
GRANT CREATE VIEW TO SAU;
GRANT CREATE SEQUENCE TO SAU;
GRANT CREATE TRIGGER TO SAU;

-- Diretório Oracle apontando para a pasta compartilhada
CREATE OR REPLACE DIRECTORY ext_dir AS '/opt/oracle/external_data';
GRANT READ, WRITE ON DIRECTORY ext_dir TO SAU;
GRANT READ, WRITE ON DIRECTORY ext_dir TO system;

-- Colocar o arquivo dentro do Docker:
docker cp DOCUMENTO_INTERVENCAO.csv oracle-free:/opt/oracle/external_data/


-- Tabela externa que lê o CSV
CREATE TABLE SAU.EXT_DOCUMENTO_INTERVENCAO (
    	COD_DOCUMENTO NUMBER,
    	NUM_DOCUMENTO VARCHAR2(50) NOT NULL
)
ORGANIZATION EXTERNAL (
    TYPE ORACLE_LOADER
    DEFAULT DIRECTORY ext_dir
    ACCESS PARAMETERS (
        RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ';'
        MISSING FIELD VALUES ARE NULL
    )
    LOCATION ('DOCUMENTO_INTERVENCAO.csv')
)
REJECT LIMIT UNLIMITED;

-- Cria Tabela DOCUMENTO_INTERVENCAO
CREATE TABLE SAU.DOCUMENTO_INTERVENCAO (
    	COD_DOCUMENTO NUMBER PRIMARY KEY,
	NUM_DOCUMENTO VARCHAR2(50) NOT NULL,
	COD_CARACTERIZACAO VARCHAR2(15),
	PERIODICIDADE VARCHAR2(2),
	STATUS VARCHAR2(20),
	DATA_INICIO_PREVISTO DATE,
    	DATA_FIM_PREVISTO DATE,
	DATA_INICIO DATE,
	DATA_FIM DATE,
	DATE_UPDATE VARCHAR2(20)
);

-- Inserir no destino (fake table)
INSERT INTO SAU.DOCUMENTO_INTERVENCAO (
    COD_DOCUMENTO,
    NUM_DOCUMENTO,
    DES_INTERVENCAO,
    COD_CARACTERIZACAO,
    PERIODICIDADE,
    STATUS,
    DATA_INICIO_PREVISTO,
    DATA_FIM_PREVISTO,
    DATA_INICIO,
    DATA_FIM,
    DATE_UPDATE
)
SELECT
    e.COD_DOCUMENTO,
    e.NUM_DOCUMENTO,
    e.DES_INTERVENCAO,
    e.COD_CARACTERIZACAO,
    e.PERIODICIDADE,
    e.STATUS,
    e.DATA_INICIO_PREVISTO,
    e.DATA_FIM_PREVISTO,
    e.DATA_INICIO,
    e.DATA_FIM,
    e.DATE_UPDATE
FROM SAU.EXT_DOCUMENTO_INTERVENCAO e
WHERE NOT EXISTS (
    SELECT 1
    FROM SAU.DOCUMENTO_INTERVENCAO d
    WHERE d.COD_DOCUMENTO = e.COD_DOCUMENTO
);

COMMIT;

